{"version":3,"sources":["common/utils.js","index/imgs/switch.svg","index/store/actions.ts","index/store/reducers.ts","index/store/store.ts","common/CitySelector.tsx","common/DateSelector.tsx","index/components/Journey.tsx","index/components/DepartDate.tsx","index/components/HighSpeed.tsx","index/components/Submit.tsx","index/App.tsx","index/index.tsx","common/Header.tsx"],"names":["timeZero","timestamp","Date","now","target","setHours","setMinutes","setSeconds","setMilliseconds","getTime","module","exports","setTo","to","type","payload","setFrom","from","exchangeFromTo","dispatch","getState","setSearchKey","key","showCitySelector","bool","setCitySelectorVisible","setSelectingLeftCity","hideCitySelector","setSelectedCity","city","currentSelectingLeftCity","setCityData","list","setIsLoadingCityData","fetchCityData","isLoadingCityData","cache","JSON","parse","localStorage","getItem","expires","data","fetch","then","res","json","cityList","setItem","stringify","catch","showDateSelector","hideDateSelector","setHighSpeed","state","action","searchKey","isCitySelectorVisible","cityData","departDate","isDateSelectorVisible","highSpeed","createStore","combineReducers","reducers","applyMiddleware","thunk","CityItem","props","name","onSelect","className","onClick","CitySection","title","citys","data-cate","map","CitySections","memo","sections","section","CitySelector","show","loading","onBack","useEffect","useMemo","trim","classNames","hidden","width","height","points","stroke","strokeWidth","fill","value","placeholder","onChange","e","length","Day","day","classes","push","includes","getDay","dateString","getDate","Week","days","index","Month","startTimeInMonth","startDay","currentDay","getMonth","setDate","Array","concat","lastDay","weeks","row","week","slice","colSpan","getFullYear","DateSelector","monthSequence","setMonth","Header","month","Journey","readOnly","src","switchImg","alt","DepartDate","time","timeZeroOfDepart","departDateString","dayjs","format","isToday","weekString","HighSpeed","toggle","checked","connect","useCallback","window","history","back","journeyCbs","bindActionCreators","citySelectorCbs","highSpeedCbs","departDateCbs","dateSelectorCbs","onSelectDate","setDepartDate","ReactDOM","render","store","document","getElementById"],"mappings":"8HAAO,SAASA,IAAkC,IAAzBC,EAAwB,uDAAZC,KAAKC,MAClCC,EAAS,IAAIF,KAAKD,GAOxB,OALAG,EAAOC,SAAS,GAChBD,EAAOE,WAAW,GAClBF,EAAOG,WAAW,GAClBH,EAAOI,gBAAgB,GAEhBJ,EAAOK,UARhB,mC,wCCAAC,EAAOC,QAAU,IAA0B,oC,6SCuBpC,SAASC,EAAMC,GACpB,MAAO,CACLC,KAfyB,gBAgBzBC,QAASF,GAIN,SAASG,EAAQC,GACtB,MAAO,CACLH,KArB2B,kBAsB3BC,QAASE,GAIN,SAASC,IACd,OAAO,SAACC,EAAoBC,GAAmB,IAAD,EACvBA,IAAbP,EADoC,EACpCA,GACRM,EAASP,EAFmC,EAChCK,OAEZE,EAASH,EAAQH,KAId,SAASQ,EAAaC,GAC3B,MAAO,CACLR,KAlCiC,wBAmCjCC,QAASO,GAIN,SAASC,EAAiBC,GAC/B,OAAO,SAACL,GACNA,EAmBG,SAAgCK,GACrC,MAAO,CACLV,KA5DF,mCA6DEC,QAASS,GAtBAC,EAAuB,IAChCN,EAWG,SAA8BK,GACnC,MAAO,CACLV,KAnD0C,iCAoD1CC,QAASS,GAdAE,CAAqBF,KAI3B,SAASG,IACd,MAAO,CACLb,KA9CF,mCA+CEC,SAAS,GAkBN,SAASa,EAAgBC,GAC9B,OAAO,SAACV,EAAoBC,GAIxBD,EAHmCC,IAA7BU,yBAGGd,EAAQa,GAERjB,EAAMiB,IAGjBV,EA9BK,CACLL,KA9CF,mCA+CEC,SAAS,KAgCN,SAASgB,EAAYC,GAC1B,MAAO,CACLlB,KApFgC,uBAqFhCC,QAASiB,GAIN,SAASC,EAAqBT,GACnC,MAAO,CACLV,KAvF2C,kCAwF3CC,QAASS,GAIN,SAASU,IACd,OAAO,SAACf,EAAoBC,GAG1B,IAF8BA,IAAtBe,kBAER,CAEA,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,MAEhEtC,KAAKC,MAAQiC,EAAMK,QACrBtB,EAASY,EAAYK,EAAMM,QAI7BvB,EAASc,GAAqB,IAE9BU,MAAM,uEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAF,GACJvB,EAASY,EAAYW,EAAKK,WAE1BR,aAAaS,QACX,kBACAX,KAAKY,UAAU,CACbR,QAASvC,KAAKC,MAAQ,IACtBuC,KAAMA,EAAKK,YAIf5B,EAASc,GAAqB,OAE/BiB,OAAM,WACL/B,EAASc,GAAqB,UAK/B,SAASkB,IACd,MAAO,CACLrC,KA9HF,mCA+HEC,SAAS,GAIN,SAASqC,IACd,MAAO,CACLtC,KArIF,mCAsIEC,SAAS,GAWN,SAASsC,EAAa7B,GAC3B,MAAO,CACLV,KAlJiC,wBAmJjCC,QAASS,GCjJE,OACbX,GADa,WAC0C,IAApDyC,EAAmD,uDAAnC,eAAMC,EAA6B,uCAC5CzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,IDlBuB,gBCmBrB,OAAOC,EAKX,OAAOuC,GAGTrC,KAda,WAcgD,IAAxDqC,EAAuD,uDAArC,eAAMC,EAA+B,uCAClDzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,ID9ByB,kBC+BvB,OAAOC,EAKX,OAAOuC,GAGTE,UA3Ba,WA2B6D,IAAhEF,EAA+D,uDAAxC,GAAIC,EAAoC,uCAC/DzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,IDzC+B,wBC0C7B,OAAOC,EAKX,OAAOuC,GAGTxB,yBAxCa,WA2CV,IAFDwB,EAEA,wDADAC,EACA,uCACQzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,IDrDwC,iCCsDtC,OAAOC,EAKX,OAAOuC,GAGTG,sBAxDa,WA2DV,IAFDH,EAEA,wDADAC,EACA,uCACQzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,IDvEJ,mCCwEM,OAAOC,EAKX,OAAOuC,GAGTnB,kBAxEa,WA2EV,IAFDmB,EAEA,wDADAC,EACA,uCACQzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,IDtFyC,kCCuFvC,OAAOC,EAKX,OAAOuC,GAGTI,SAxFa,WAwF4D,IAAhEJ,EAA+D,uDAAzC,KAAMC,EAAmC,uCAC9DzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,IDvG8B,uBCwG5B,OAAOC,EAKX,OAAOuC,GAGTK,WArGa,WAwGV,IAFDL,EAEA,uDAFwBpD,KAAKC,MAC7BoD,EACA,uCACQzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,IDjHgC,yBCkH9B,OAAOC,EAKX,OAAOuC,GAGTM,sBArHa,WAwHV,IAFDN,EAEA,wDADAC,EACA,uCACQzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,ID/HJ,mCCgIM,OAAOC,EAKX,OAAOuC,GAGTO,UArIa,WAqI4D,IAA/DP,EAA8D,wDAAlCC,EAAkC,uCAC9DzC,EAAkByC,EAAlBzC,KAAMC,EAAYwC,EAAZxC,QAEd,OAAQD,GACN,ID3I+B,wBC4I7B,OAAOC,EAKX,OAAOuC,I,QCjKIQ,cACbC,YAAgBC,GAChB,CACE/C,KAAM,eACNJ,GAAI,eACJ2C,UAAW,GACXE,SAAU,KACVD,uBAAuB,EACvB3B,0BAA0B,EAC1BK,mBAAmB,EACnBwB,WAAYzD,KAAKC,MACjByD,uBAAuB,EACvBC,WAAW,GAEbI,YAAgBC,M,qCCAZC,G,MAA8B,SAAAC,GAAU,IACpCC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACd,OACE,wBAAIC,UAAU,UAAUC,QAAS,kBAAMF,EAASD,KAC7CA,KAUDI,EAAoC,SAAAL,GAAU,IAC1CM,EAAgCN,EAAhCM,MADyC,EACTN,EAAzBO,aADkC,MAC1B,GAD0B,EACtBL,EAAaF,EAAbE,SAC3B,OACE,wBAAIC,UAAU,WACZ,wBAAIA,UAAU,UAAUK,YAAWF,GAChCA,GAEFC,EAAME,KAAI,SAAAhD,GACT,OAAO,kBAAC,EAAD,CAAUP,IAAKO,EAAKwC,KAAMA,KAAMxC,EAAKwC,KAAMC,SAAUA,SAU9DQ,EAAsCC,gBAAK,SAAAX,GAAU,IACjDY,EAAuBZ,EAAvBY,SAAUV,EAAaF,EAAbE,SAElB,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,aACZS,GACCA,EAASH,KAAI,SAAAI,GACX,OACE,kBAAC,EAAD,CACE3D,IAAK2D,EAAQP,MACbA,MAAOO,EAAQP,MACfC,MAAOM,EAAQN,MACfL,SAAUA,YAsFXY,EAnEkBH,gBAAK,SAAAX,GAAU,IAE5Ce,EAQEf,EARFe,KACAzB,EAOEU,EAPFV,SACAF,EAMEY,EANFZ,UACA4B,EAKEhB,EALFgB,QACAC,EAIEjB,EAJFiB,OACAf,EAGEF,EAHFE,SACAjD,EAEE+C,EAFF/C,aACAa,EACEkC,EADFlC,cAGFoD,qBAAU,YACHH,GAAQzB,GAAY0B,GACzBlD,MACC,CAACiD,EAAMzB,EAAU0B,EAASlD,IAE7B,IAAMZ,EAAMiE,mBAAQ,kBAAM/B,EAAUgC,SAAQ,CAAChC,IAc7C,OACE,yBAAKe,UAAWkB,IAAW,gBAAiB,CAAEC,QAASP,KACrD,yBAAKZ,UAAU,eACb,yBAAKA,UAAU,cAAcC,QAAS,kBAAMa,MAC1C,yBAAKM,MAAM,KAAKC,OAAO,MACrB,8BACEC,OAAO,oBACPC,OAAO,OACPC,YAAY,IACZC,KAAK,WAIX,yBAAKzB,UAAU,wBACb,2BACEzD,KAAK,OACLmF,MAAOzC,EACPe,UAAU,eACV2B,YAAY,qEACZC,SAAU,SAAAC,GAAC,OAAI/E,EAAa+E,EAAEhG,OAAO6F,WAGzC,uBACE1B,UAAWkB,IAAW,eAAgB,CACpCC,OAAuB,IAAfpE,EAAI+E,SAEd7B,QAAS,kBAAMnD,EAAa,MAJ9B,WAjCA+D,EACK,wCAGL1B,EACK,kBAACoB,EAAD,CAAcE,SAAUtB,EAAUY,SAAUA,IAG9C,0C,OCjGLgC,G,MAAoB,SAAAlC,GAAU,IAC1BmC,EAAkBnC,EAAlBmC,IAAKjC,EAAaF,EAAbE,SACb,IAAKiC,EACH,OAAO,wBAAIhC,UAAU,SAGvB,IAAMiC,EAAU,GAEVrG,EAAMH,cAERuG,EAAMpG,GACRqG,EAAQC,KAAK,YAGX,CAAC,EAAG,GAAGC,SAAS,IAAIxG,KAAKqG,GAAKI,WAChCH,EAAQC,KAAK,WAGf,IAAMG,EAAazG,IAAQoG,EAAM,eAAO,IAAIrG,KAAKqG,GAAKM,UAEtD,OACE,wBAAItC,UAAWkB,IAAWe,GAAUhC,QAAS,kBAAMF,EAASiC,KACzDK,KAUDE,EAAsB,SAAA1C,GAAU,IAC5B2C,EAAmB3C,EAAnB2C,KAAMzC,EAAaF,EAAbE,SACd,OACE,wBAAIC,UAAU,mBACXwC,EAAKlC,KAAI,SAAC0B,EAAKS,GACd,OAAO,kBAAC,EAAD,CAAK1F,IAAK0F,EAAOT,IAAKA,EAAKjC,SAAUA,SAW9C2C,EAAwB,SAAA7C,GAO5B,IAPsC,IAC9B8C,EAA+B9C,EAA/B8C,iBAAkB5C,EAAaF,EAAbE,SAEpB6C,EAAW,IAAIjH,KAAKgH,GACpBE,EAAa,IAAIlH,KAAKgH,GAExBH,EAAO,GACJK,EAAWC,aAAeF,EAASE,YACxCN,EAAKN,KAAKW,EAAW3G,WACrB2G,EAAWE,QAAQF,EAAWP,UAAY,GAG5CE,EAAO,IAAIQ,MAAMJ,EAASR,SAAWQ,EAASR,SAAW,EAAI,GAC1DX,KAAK,MACLwB,OAAOT,GAEV,IAAMU,EAAU,IAAIvH,KAAK6G,EAAKA,EAAKV,OAAS,IAE5CU,EAAOA,EAAKS,OACV,IAAID,MAAME,EAAQd,SAAW,EAAIc,EAAQd,SAAW,GAAGX,KAAK,OAI9D,IADA,IAAM0B,EAAQ,GACLC,EAAM,EAAGA,EAAMZ,EAAKV,OAAS,EAAGsB,IAAO,CAC9C,IAAMC,EAAOb,EAAKc,MAAY,EAANF,EAAqB,GAAXA,EAAM,IACxCD,EAAMjB,KAAKmB,GAGb,OACE,2BAAOrD,UAAU,cACf,+BACE,4BACE,wBAAIuD,QAAS,GACX,4BACGX,EAASY,cADZ,SAC4BZ,EAASE,WADrC,aAMN,+BACE,wBAAI9C,UAAU,oBACZ,4CACA,4CACA,4CACA,4CACA,4CACA,wBAAIA,UAAU,WAAd,gBACA,wBAAIA,UAAU,WAAd,iBAEDmD,EAAM7C,KAAI,SAAC+C,EAAMZ,GAChB,OAAO,kBAAC,EAAD,CAAM1F,IAAK0F,EAAOD,KAAMa,EAAMtD,SAAUA,UA4C1C0D,EA/B2B,SAAA5D,GAAU,IAC1Ce,EAA2Bf,EAA3Be,KAAMb,EAAqBF,EAArBE,SAAUe,EAAWjB,EAAXiB,OAElBlF,EAAM,IAAID,KAChBC,EAAIE,SAAS,GACbF,EAAIG,WAAW,GACfH,EAAII,WAAW,GACfJ,EAAIK,gBAAgB,GACpBL,EAAImH,QAAQ,GAEZ,IAAMW,EAAgB,CAAC9H,EAAIM,WAO3B,OANAN,EAAI+H,SAAS/H,EAAIkH,WAAa,GAC9BY,EAAcxB,KAAKtG,EAAIM,WAEvBN,EAAI+H,SAAS/H,EAAIkH,WAAa,GAC9BY,EAAcxB,KAAKtG,EAAIM,WAGrB,yBAAK8D,UAAWkB,IAAW,gBAAiB,CAAEC,QAASP,KACrD,kBAACgD,EAAA,EAAD,CAAQzD,MAAM,2BAAOW,OAAQA,IAC7B,yBAAKd,UAAU,wBACZ0D,EAAcpD,KAAI,SAACuD,EAAOpB,GACzB,OACE,kBAAC,EAAD,CAAOE,iBAAkBkB,EAAO9G,IAAK0F,EAAO1C,SAAUA,U,iBCzGnD+D,G,MA/BmBtD,gBAAK,SAAAX,GAAU,IACvCvD,EAA+CuD,EAA/CvD,GAAII,EAA2CmD,EAA3CnD,KAAMC,EAAqCkD,EAArClD,eAAgBK,EAAqB6C,EAArB7C,iBAClC,OACE,yBAAKgD,UAAU,WACb,yBAAKA,UAAU,mBACb,2BACEzD,KAAK,OACLwH,UAAQ,EACRjE,KAAK,OACL4B,MAAOhF,EACPsD,UAAU,6BACVC,QAAS,kBAAMjD,GAAiB,OAGpC,yBAAKgD,UAAU,iBAAiBC,QAAS,kBAAMtD,MAC7C,yBAAKqH,IAAKC,IAAW7C,MAAM,KAAKC,OAAO,KAAK6C,IAAI,MAElD,yBAAKlE,UAAU,mBACb,2BACEzD,KAAK,OACLwH,UAAQ,EACRjE,KAAK,KACL4B,MAAOpF,EACP0D,UAAU,2BACVC,QAAS,kBAAMjD,GAAiB,Y,gBCD3BmH,G,MAxBgB3D,gBAAK,SAAAX,GAAU,IACpCuE,EAAkBvE,EAAlBuE,KAAMnE,EAAYJ,EAAZI,QAERoE,EAAmB5I,YAAS2I,GAC5BhF,EAAa,IAAIzD,KAAK0I,GAEtBC,EAAmBC,IAAMF,GAAkBG,OAAO,cAElDC,EAAUJ,IAAqB5I,cAE/BiJ,EACJ,SACA,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAAKtF,EAAWgD,WAC9CqC,EAAU,eAAO,IAEpB,OACE,yBAAKzE,UAAU,cAAcC,QAAS,kBAAMA,GAAQ,KAClD,2BAAO1D,KAAK,SAASuD,KAAK,OAAO4B,MAAO4C,IACvCA,EACD,0BAAMtE,UAAU,eAAe0E,QCHtBC,G,MAjBcnE,gBAAK,SAAAX,GAAU,IAClCP,EAAsBO,EAAtBP,UAAWsF,EAAW/E,EAAX+E,OACnB,OACE,yBAAK5E,UAAU,cACb,yBAAKA,UAAU,oBAAf,yCACA,yBAAKA,UAAU,oBAAoBC,QAAS,kBAAM2E,GAAQtF,KACxD,2BAAO/C,KAAK,SAASuD,KAAK,YAAY4B,MAAOpC,EAAY,KACzD,yBAAKU,UAAWkB,IAAW,mBAAoB,CAAE2D,QAASvF,KACxD,0BACEU,UAAWkB,IAAW,oBAAqB,CAAE2D,QAASvF,aChBnDkB,G,MAAAA,gBAAK,WAClB,OACE,yBAAKR,UAAU,UACb,4BAAQzD,KAAK,SAASyD,UAAU,iBAAhC,qBCiJS8E,eACb,YAWE,MAAO,CACLxI,GAFW,EATbA,GAYEI,KAHW,EARbA,KAYEuC,UAJW,EAPbA,UAYEC,sBALW,EANbA,sBAYEC,SANW,EALbA,SAYEvB,kBAPW,EAJbA,kBAYEwB,WARW,EAHbA,WAYEC,sBATW,EAFbA,sBAYEC,UAVW,EADbA,cAcF,SAA4B1C,GAC1B,MAAO,CACLA,cA1BSkI,EArGW,SAAAjF,GAAU,IAEhCvD,EAUEuD,EAVFvD,GACAI,EASEmD,EATFnD,KACAwC,EAQEW,EARFX,sBACAD,EAOEY,EAPFZ,UACAE,EAMEU,EANFV,SACAvB,EAKEiC,EALFjC,kBACAwB,EAIES,EAJFT,WACAC,EAGEQ,EAHFR,sBACAC,EAEEO,EAFFP,UACA1C,EACEiD,EADFjD,SAGIkE,EAASiE,uBAAY,WACzBC,OAAOC,QAAQC,SACd,IAEGC,EAAanE,mBAAQ,WACzB,OAAOoE,YAAmB,CAAEzI,iBAAgBK,oBAAoBJ,KAC/D,CAACA,IAEEyI,EAAkBrE,mBAAQ,WAC9B,OAAOoE,YACL,CACEtE,OAAQ1D,EACRO,gBACAoC,SAAU1C,EACVP,gBAEFF,KAED,CAACA,IAEE0I,EAAetE,mBAAQ,WAC3B,OAAOoE,YACL,CACER,OAAQ9F,GAEVlC,KAED,CAACA,IAEE2I,EAAgBvE,mBAAQ,WAC5B,OAAOoE,YACL,CACEnF,QAASrB,GAEXhC,KAED,CAACA,IAEE4I,EAAkBxE,mBAAQ,WAC9B,OAAOoE,YACL,CACEtE,OAAQjC,GAEVjC,KAED,CAACA,IAEE6I,EAAeV,uBACnB,SAAA/C,IACOA,GAAOA,EAAMvG,gBAClBmB,ET4CC,SAAuBwC,GAC5B,MAAO,CACL7C,KA9IkC,yBA+IlCC,QAAS4C,GS/CEsG,CAAc1D,IACvBpF,ETqCG,CACLL,KArIF,mCAsIEC,SAAS,OSrCT,CAACI,IAGH,OACE,6BACE,yBAAKoD,UAAU,kBACb,kBAAC4D,EAAA,EAAD,CAAQzD,MAAM,qBAAMW,OAAQA,KAE9B,0BAAM9B,OAAO,aAAagB,UAAU,QAClC,kBAAC,EAAD,eAAS1D,GAAIA,EAAII,KAAMA,GAAUyI,IACjC,kBAAC,EAAD,eAAYf,KAAMhF,GAAgBmG,IAClC,kBAAC,EAAD,eAAWjG,UAAWA,GAAegG,IACrC,kBAAC,EAAD,OAEDpG,GACC,kBAAC,EAAD,eACE0B,KAAM1B,EACND,UAAWA,EACXE,SAAUA,EACV0B,QAASjD,GACLyH,IAGPhG,GACC,kBAAC,EAAD,eACEuB,KAAMvB,EACNU,SAAU0F,GACND,QCvIdG,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,+BCb1B,oBAOMnC,GAPN,MAOgCpD,gBAAK,SAAAX,GAAU,IACrCiB,EAAkBjB,EAAlBiB,OAAQX,EAAUN,EAAVM,MAChB,OACE,yBAAKH,UAAU,UACb,yBAAKA,UAAU,cAAcC,QAASa,GACpC,yBAAKM,MAAM,KAAKC,OAAO,MACrB,8BACEC,OAAO,oBACPC,OAAO,OACPC,YAAY,IACZC,KAAK,WAIX,wBAAIzB,UAAU,gBAAgBG,QAKrByD,Q","file":"static/js/index.7da7d3ff.chunk.js","sourcesContent":["export function timeZero(timestamp = Date.now()) {\r\n  const target = new Date(timestamp)\r\n\r\n  target.setHours(0)\r\n  target.setMinutes(0)\r\n  target.setSeconds(0)\r\n  target.setMilliseconds(0)\r\n\r\n  return target.getTime()\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/switch.e6009882.svg\";","import { Dispatch } from 'redux'\r\nimport {\r\n  ToProp,\r\n  FromProp,\r\n  SearchKeyProp,\r\n  VisibleProp,\r\n  CityDataProp,\r\n  DepartDateProp\r\n} from '../types'\r\n\r\nexport const ACTION_SET_TO = 'ACTION_SET_TO'\r\nexport const ACTION_SET_FROM = 'ACTION_SET_FROM'\r\nexport const ACTION_SET_CITY_DATA = 'ACTION_SET_CITY_DATA'\r\nexport const ACTION_SET_SEARCH_KEY = 'ACTION_SET_SEARCH_KEY'\r\nexport const ACTION_SET_CITY_SELECTOR_VISIBLE =\r\n  'ACTION_SET_CITY_SELECTOR_VISIBLE'\r\nexport const ACTION_SET_IS_LOADING_CITY_DATA = 'ACTION_SET_IS_LOADING_CITY_DATA'\r\nexport const ACTION_SET_SELECTING_LEFT_CITY = 'ACTION_SET_SELECTING_LEFT_CITY'\r\nexport const ACTION_SET_DEPART_DATE = 'ACTION_SET_DEPART_DATE'\r\nexport const ACTION_SET_DATE_SELECTOR_VISIBLE =\r\n  'ACTION_SET_DATE_SELECTOR_VISIBLE'\r\nexport const ACTION_SET_HIGH_SPEED = 'ACTION_SET_HIGH_SPEED'\r\n\r\nexport function setTo(to: ToProp) {\r\n  return {\r\n    type: ACTION_SET_TO,\r\n    payload: to\r\n  }\r\n}\r\n\r\nexport function setFrom(from: FromProp) {\r\n  return {\r\n    type: ACTION_SET_FROM,\r\n    payload: from\r\n  }\r\n}\r\n\r\nexport function exchangeFromTo() {\r\n  return (dispatch: Dispatch, getState: any) => {\r\n    const { to, from } = getState()\r\n    dispatch(setTo(from))\r\n    dispatch(setFrom(to))\r\n  }\r\n}\r\n\r\nexport function setSearchKey(key: SearchKeyProp) {\r\n  return {\r\n    type: ACTION_SET_SEARCH_KEY,\r\n    payload: key\r\n  }\r\n}\r\n\r\nexport function showCitySelector(bool: VisibleProp) {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(setCitySelectorVisible(true))\r\n    dispatch(setSelectingLeftCity(bool))\r\n  }\r\n}\r\n\r\nexport function hideCitySelector() {\r\n  return {\r\n    type: ACTION_SET_CITY_SELECTOR_VISIBLE,\r\n    payload: false\r\n  }\r\n}\r\n\r\nexport function setSelectingLeftCity(bool: VisibleProp) {\r\n  return {\r\n    type: ACTION_SET_SELECTING_LEFT_CITY,\r\n    payload: bool\r\n  }\r\n}\r\n\r\nexport function setCitySelectorVisible(bool: VisibleProp) {\r\n  return {\r\n    type: ACTION_SET_CITY_SELECTOR_VISIBLE,\r\n    payload: bool\r\n  }\r\n}\r\n\r\nexport function setSelectedCity(city: FromProp | ToProp) {\r\n  return (dispatch: Dispatch, getState: any) => {\r\n    const { currentSelectingLeftCity } = getState()\r\n\r\n    if (currentSelectingLeftCity) {\r\n      dispatch(setFrom(city))\r\n    } else {\r\n      dispatch(setTo(city))\r\n    }\r\n\r\n    dispatch(hideCitySelector())\r\n  }\r\n}\r\n\r\nexport function setCityData(list: CityDataProp) {\r\n  return {\r\n    type: ACTION_SET_CITY_DATA,\r\n    payload: list\r\n  }\r\n}\r\n\r\nexport function setIsLoadingCityData(bool: VisibleProp) {\r\n  return {\r\n    type: ACTION_SET_IS_LOADING_CITY_DATA,\r\n    payload: bool\r\n  }\r\n}\r\n\r\nexport function fetchCityData() {\r\n  return (dispatch: Dispatch, getState: any) => {\r\n    const { isLoadingCityData } = getState()\r\n\r\n    if (isLoadingCityData) return\r\n\r\n    const cache = JSON.parse(localStorage.getItem('city_data_cache') || '{}')\r\n\r\n    if (Date.now() < cache.expires) {\r\n      dispatch(setCityData(cache.data))\r\n      return\r\n    }\r\n\r\n    dispatch(setIsLoadingCityData(true))\r\n\r\n    fetch('http://easy-mock.liuup.com/mock/5efef790339f163501d502b7/api/cities')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        dispatch(setCityData(data.cityList))\r\n\r\n        localStorage.setItem(\r\n          'city_data_cache',\r\n          JSON.stringify({\r\n            expires: Date.now() + 60 * 1000,\r\n            data: data.cityList\r\n          })\r\n        )\r\n\r\n        dispatch(setIsLoadingCityData(false))\r\n      })\r\n      .catch(() => {\r\n        dispatch(setIsLoadingCityData(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport function showDateSelector() {\r\n  return {\r\n    type: ACTION_SET_DATE_SELECTOR_VISIBLE,\r\n    payload: true\r\n  }\r\n}\r\n\r\nexport function hideDateSelector() {\r\n  return {\r\n    type: ACTION_SET_DATE_SELECTOR_VISIBLE,\r\n    payload: false\r\n  }\r\n}\r\n\r\nexport function setDepartDate(departDate: DepartDateProp) {\r\n  return {\r\n    type: ACTION_SET_DEPART_DATE,\r\n    payload: departDate\r\n  }\r\n}\r\n\r\nexport function setHighSpeed(bool: VisibleProp) {\r\n  return {\r\n    type: ACTION_SET_HIGH_SPEED,\r\n    payload: bool\r\n  }\r\n}\r\n","import {\r\n  ACTION_SET_TO,\r\n  ACTION_SET_FROM,\r\n  ACTION_SET_SEARCH_KEY,\r\n  ACTION_SET_CITY_SELECTOR_VISIBLE,\r\n  ACTION_SET_SELECTING_LEFT_CITY,\r\n  ACTION_SET_IS_LOADING_CITY_DATA,\r\n  ACTION_SET_CITY_DATA,\r\n  ACTION_SET_DATE_SELECTOR_VISIBLE,\r\n  ACTION_SET_DEPART_DATE,\r\n  ACTION_SET_HIGH_SPEED\r\n} from './actions'\r\n\r\nimport {\r\n  actionProps,\r\n  ToProp,\r\n  FromProp,\r\n  SearchKeyProp,\r\n  VisibleProp,\r\n  CityDataProp,\r\n  DepartDateProp\r\n} from '../types'\r\n\r\nexport default {\r\n  to(state: ToProp = '北京', action: actionProps<ToProp>) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_TO: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  from(state: FromProp = '上海', action: actionProps<FromProp>) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_FROM: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  searchKey(state: SearchKeyProp = '', action: actionProps<SearchKeyProp>) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_SEARCH_KEY: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  currentSelectingLeftCity(\r\n    state: VisibleProp = false,\r\n    action: actionProps<VisibleProp>\r\n  ) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_SELECTING_LEFT_CITY: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  isCitySelectorVisible(\r\n    state: VisibleProp = false,\r\n    action: actionProps<VisibleProp>\r\n  ) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_CITY_SELECTOR_VISIBLE: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  isLoadingCityData(\r\n    state: VisibleProp = false,\r\n    action: actionProps<VisibleProp>\r\n  ) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_IS_LOADING_CITY_DATA: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  cityData(state: CityDataProp = null, action: actionProps<CityDataProp>) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_CITY_DATA: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  departDate(\r\n    state: DepartDateProp = Date.now(),\r\n    action: actionProps<DepartDateProp>\r\n  ) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_DEPART_DATE: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  isDateSelectorVisible(\r\n    state: VisibleProp = false,\r\n    action: actionProps<VisibleProp>\r\n  ) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_DATE_SELECTOR_VISIBLE: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  },\r\n\r\n  highSpeed(state: VisibleProp = false, action: actionProps<VisibleProp>) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n      case ACTION_SET_HIGH_SPEED: {\r\n        return payload\r\n      }\r\n      default:\r\n    }\r\n\r\n    return state\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\n\r\nimport reducers from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport default createStore(\r\n  combineReducers(reducers),\r\n  {\r\n    from: '北京',\r\n    to: '上海',\r\n    searchKey: '',\r\n    cityData: null,\r\n    isCitySelectorVisible: false,\r\n    currentSelectingLeftCity: false,\r\n    isLoadingCityData: false,\r\n    departDate: Date.now(),\r\n    isDateSelectorVisible: false,\r\n    highSpeed: false\r\n  },\r\n  applyMiddleware(thunk)\r\n)\r\n","import React, { FC, memo, useMemo, useEffect } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport './styles/CitySelector.css'\r\nimport {\r\n  VisibleProp,\r\n  SearchKeyProp,\r\n  CityProp,\r\n  CityDataProp\r\n} from '../index/types'\r\n\r\ninterface SelectProp {\r\n  onSelect: (city: string) => void\r\n}\r\n\r\ninterface CityItemProps extends SelectProp {\r\n  name: string\r\n}\r\n\r\nconst CityItem: FC<CityItemProps> = props => {\r\n  const { name, onSelect } = props\r\n  return (\r\n    <li className=\"city-li\" onClick={() => onSelect(name)}>\r\n      {name}\r\n    </li>\r\n  )\r\n}\r\n\r\ninterface CitySectionProps extends SelectProp {\r\n  title: string\r\n  citys: CityProp[]\r\n}\r\n\r\nconst CitySection: FC<CitySectionProps> = props => {\r\n  const { title, citys = [], onSelect } = props\r\n  return (\r\n    <ul className=\"city-ul\">\r\n      <li className=\"city-li\" data-cate={title}>\r\n        {title}\r\n      </li>\r\n      {citys.map(city => {\r\n        return <CityItem key={city.name} name={city.name} onSelect={onSelect} />\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\ninterface CitySectionsProps extends SelectProp {\r\n  sections: CityDataProp\r\n}\r\n\r\nconst CitySections: FC<CitySectionsProps> = memo(props => {\r\n  const { sections, onSelect } = props\r\n\r\n  return (\r\n    <div className=\"city-list\">\r\n      <div className=\"city-cate\">\r\n        {sections &&\r\n          sections.map(section => {\r\n            return (\r\n              <CitySection\r\n                key={section.title}\r\n                title={section.title}\r\n                citys={section.citys}\r\n                onSelect={onSelect}\r\n              />\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\ninterface CProps extends SelectProp {\r\n  show: VisibleProp\r\n  searchKey: SearchKeyProp\r\n  cityData: CityDataProp\r\n  loading: VisibleProp\r\n  onBack: () => void\r\n  fetchCityData: () => void\r\n  setSearchKey(key: string): void\r\n}\r\n\r\nconst CitySelector: FC<CProps> = memo(props => {\r\n  const {\r\n    show,\r\n    cityData,\r\n    searchKey,\r\n    loading,\r\n    onBack,\r\n    onSelect,\r\n    setSearchKey,\r\n    fetchCityData\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    if (!show || cityData || loading) return\r\n    fetchCityData()\r\n  }, [show, cityData, loading, fetchCityData])\r\n\r\n  const key = useMemo(() => searchKey.trim(), [searchKey])\r\n\r\n  const outputCitySections = () => {\r\n    if (loading) {\r\n      return <div>Loading</div>\r\n    }\r\n\r\n    if (cityData) {\r\n      return <CitySections sections={cityData} onSelect={onSelect} />\r\n    }\r\n\r\n    return <div>error</div>\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('city-selector', { hidden: !show })}>\r\n      <div className=\"city-search\">\r\n        <div className=\"search-back\" onClick={() => onBack()}>\r\n          <svg width=\"42\" height=\"42\">\r\n            <polyline\r\n              points=\"25,13 16,21 25,29\"\r\n              stroke=\"#fff\"\r\n              strokeWidth=\"2\"\r\n              fill=\"none\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div className=\"search-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchKey}\r\n            className=\"search-input\"\r\n            placeholder=\"城市、车站的中文或拼音\"\r\n            onChange={e => setSearchKey(e.target.value)}\r\n          />\r\n        </div>\r\n        <i\r\n          className={classNames('search-clean', {\r\n            hidden: key.length === 0\r\n          })}\r\n          onClick={() => setSearchKey('')}\r\n        >\r\n          &#xf063;\r\n        </i>\r\n      </div>\r\n      {outputCitySections()}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default CitySelector\r\n","import React, { FC } from 'react'\r\nimport classNames from 'classnames'\r\nimport Header from './Header'\r\nimport { DepartDateProp, VisibleProp } from '../index/types'\r\nimport { timeZero } from './utils'\r\nimport './styles/DateSelector.css'\r\n\r\ntype onSelectProp = (day: DepartDateProp) => void\r\n\r\ninterface DayProps {\r\n  day: DepartDateProp\r\n  onSelect: onSelectProp\r\n}\r\n\r\nconst Day: FC<DayProps> = props => {\r\n  const { day, onSelect } = props\r\n  if (!day) {\r\n    return <td className=\"null\"></td>\r\n  }\r\n\r\n  const classes = []\r\n\r\n  const now = timeZero()\r\n\r\n  if (day < now) {\r\n    classes.push('disabled')\r\n  }\r\n\r\n  if ([6, 0].includes(new Date(day).getDay())) {\r\n    classes.push('weekend')\r\n  }\r\n\r\n  const dateString = now === day ? '今天' : new Date(day).getDate()\r\n\r\n  return (\r\n    <td className={classNames(classes)} onClick={() => onSelect(day)}>\r\n      {dateString}\r\n    </td>\r\n  )\r\n}\r\n\r\ninterface WeekProps {\r\n  days: DepartDateProp[]\r\n  onSelect: onSelectProp\r\n}\r\n\r\nconst Week: FC<WeekProps> = props => {\r\n  const { days, onSelect } = props\r\n  return (\r\n    <tr className=\"date-table-days\">\r\n      {days.map((day, index) => {\r\n        return <Day key={index} day={day} onSelect={onSelect} />\r\n      })}\r\n    </tr>\r\n  )\r\n}\r\n\r\ninterface MonthProps {\r\n  startTimeInMonth: DepartDateProp\r\n  onSelect: onSelectProp\r\n}\r\n\r\nconst Month: FC<MonthProps> = props => {\r\n  const { startTimeInMonth, onSelect } = props\r\n\r\n  const startDay = new Date(startTimeInMonth)\r\n  const currentDay = new Date(startTimeInMonth)\r\n\r\n  let days = []\r\n  while (currentDay.getMonth() === startDay.getMonth()) {\r\n    days.push(currentDay.getTime())\r\n    currentDay.setDate(currentDay.getDate() + 1)\r\n  }\r\n\r\n  days = new Array(startDay.getDay() ? startDay.getDay() - 1 : 6)\r\n    .fill(null)\r\n    .concat(days)\r\n\r\n  const lastDay = new Date(days[days.length - 1])\r\n\r\n  days = days.concat(\r\n    new Array(lastDay.getDay() ? 7 - lastDay.getDay() : 0).fill(null)\r\n  )\r\n\r\n  const weeks = []\r\n  for (let row = 0; row < days.length / 7; row++) {\r\n    const week = days.slice(row * 7, (row + 1) * 7)\r\n    weeks.push(week)\r\n  }\r\n\r\n  return (\r\n    <table className=\"date-table\">\r\n      <thead>\r\n        <tr>\r\n          <td colSpan={7}>\r\n            <h5>\r\n              {startDay.getFullYear()}年{startDay.getMonth()}月\r\n            </h5>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"date-table-weeks\">\r\n          <th>周一</th>\r\n          <th>周二</th>\r\n          <th>周三</th>\r\n          <th>周四</th>\r\n          <th>周五</th>\r\n          <th className=\"weekend\">周六</th>\r\n          <th className=\"weekend\">周天</th>\r\n        </tr>\r\n        {weeks.map((week, index) => {\r\n          return <Week key={index} days={week} onSelect={onSelect} />\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\ninterface DateSelectProps {\r\n  show: VisibleProp\r\n  onSelect: onSelectProp\r\n  onBack: () => void\r\n}\r\n\r\nconst DateSelector: FC<DateSelectProps> = props => {\r\n  const { show, onSelect, onBack } = props\r\n\r\n  const now = new Date()\r\n  now.setHours(0)\r\n  now.setMinutes(0)\r\n  now.setSeconds(0)\r\n  now.setMilliseconds(0)\r\n  now.setDate(1)\r\n\r\n  const monthSequence = [now.getTime()]\r\n  now.setMonth(now.getMonth() + 1)\r\n  monthSequence.push(now.getTime())\r\n\r\n  now.setMonth(now.getMonth() + 1)\r\n  monthSequence.push(now.getTime())\r\n\r\n  return (\r\n    <div className={classNames('date-selector', { hidden: !show })}>\r\n      <Header title=\"日期选择\" onBack={onBack} />\r\n      <div className=\"date-selector-tables\">\r\n        {monthSequence.map((month, index) => {\r\n          return (\r\n            <Month startTimeInMonth={month} key={index} onSelect={onSelect} />\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateSelector\r\n","import React, { FC, memo } from 'react'\r\nimport switchImg from '../imgs/switch.svg'\r\n\r\nimport '../styles/Journey.css'\r\nimport { ToProp, FromProp, VisibleProp } from '../types'\r\n\r\nexport type JourneyProps = {\r\n  to: ToProp\r\n  from: FromProp\r\n  showCitySelector: (bool: VisibleProp) => void\r\n  exchangeFromTo: () => void\r\n}\r\nconst Journey: FC<JourneyProps> = memo(props => {\r\n  const { to, from, exchangeFromTo, showCitySelector } = props\r\n  return (\r\n    <div className=\"journey\">\r\n      <div className=\"journey-station\">\r\n        <input\r\n          type=\"text\"\r\n          readOnly\r\n          name=\"from\"\r\n          value={from}\r\n          className=\"journey-input journey-from\"\r\n          onClick={() => showCitySelector(true)}\r\n        />\r\n      </div>\r\n      <div className=\"journey-switch\" onClick={() => exchangeFromTo()}>\r\n        <img src={switchImg} width=\"70\" height=\"40\" alt=\"\" />\r\n      </div>\r\n      <div className=\"journey-station\">\r\n        <input\r\n          type=\"text\"\r\n          readOnly\r\n          name=\"to\"\r\n          value={to}\r\n          className=\"journey-input journey-to\"\r\n          onClick={() => showCitySelector(false)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Journey\r\n","import React, { FC, memo } from 'react'\r\nimport { timeZero } from '../../common/utils'\r\nimport dayjs from 'dayjs'\r\nimport '../styles/DepartDate.css'\r\nimport { DepartDateProp } from '../types'\r\n\r\ninterface IProps {\r\n  time: DepartDateProp\r\n  onClick: (bool: true) => void\r\n}\r\n\r\nconst DepartDate: FC<IProps> = memo(props => {\r\n  const { time, onClick } = props\r\n\r\n  const timeZeroOfDepart = timeZero(time)\r\n  const departDate = new Date(timeZeroOfDepart)\r\n\r\n  const departDateString = dayjs(timeZeroOfDepart).format('YYYY-MM-DD')\r\n\r\n  const isToday = timeZeroOfDepart === timeZero()\r\n\r\n  const weekString =\r\n    '周' +\r\n    ['日', '一', '二', '三', '四', '五', '六'][departDate.getDay()] +\r\n    (isToday ? '今天' : '')\r\n\r\n  return (\r\n    <div className=\"depart-date\" onClick={() => onClick(true)}>\r\n      <input type=\"hidden\" name=\"date\" value={departDateString} />\r\n      {departDateString}\r\n      <span className=\"depart-week\">{weekString}</span>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default DepartDate\r\n","import React, { FC, memo } from 'react'\r\nimport classNames from 'classnames'\r\nimport { VisibleProp } from '../types'\r\nimport '../styles/HighSpeed.css'\r\n\r\ninterface IPops {\r\n  highSpeed: VisibleProp\r\n  toggle: (bool: VisibleProp) => void\r\n}\r\n\r\nconst HighSpeed: FC<IPops> = memo(props => {\r\n  const { highSpeed, toggle } = props\r\n  return (\r\n    <div className=\"high-speed\">\r\n      <div className=\"high-speed-label\">只看高铁/动车</div>\r\n      <div className=\"high-speed-switch\" onClick={() => toggle(!highSpeed)}>\r\n        <input type=\"hidden\" name=\"highSpeed\" value={highSpeed + ''} />\r\n        <div className={classNames('high-speed-track', { checked: highSpeed })}>\r\n          <span\r\n            className={classNames('high-speed-handle', { checked: highSpeed })}\r\n          ></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default HighSpeed\r\n","import React, { memo } from 'react'\r\nimport '../styles/Submit.css'\r\n\r\nexport default memo(function Submit() {\r\n  return (\r\n    <div className=\"submit\">\r\n      <button type=\"submit\" className=\"submit-button\">\r\n        搜索\r\n      </button>\r\n    </div>\r\n  )\r\n})\r\n","import React, { FC, useCallback, useMemo } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators, Dispatch } from 'redux'\r\nimport './styles/App.css'\r\n\r\nimport Header from '../common/Header'\r\nimport CitySelector from '../common/CitySelector'\r\nimport DateSelector from '../common/DateSelector'\r\nimport Journey from './components/Journey'\r\nimport DepartDate from './components/DepartDate'\r\nimport HighSpeed from './components/HighSpeed'\r\nimport Submit from './components/Submit'\r\n\r\nimport { StoreState } from './types'\r\nimport {\r\n  exchangeFromTo,\r\n  fetchCityData,\r\n  showCitySelector,\r\n  hideCitySelector,\r\n  setSearchKey,\r\n  setSelectedCity,\r\n  showDateSelector,\r\n  hideDateSelector,\r\n  setDepartDate,\r\n  setHighSpeed\r\n} from './store/actions'\r\n\r\nimport {\r\n  ToProp,\r\n  FromProp,\r\n  SearchKeyProp,\r\n  VisibleProp,\r\n  CityDataProp,\r\n  DepartDateProp\r\n} from './types'\r\nimport { timeZero } from '../common/utils'\r\n\r\nexport interface AppProps {\r\n  to: ToProp\r\n  from: FromProp\r\n  searchKey: SearchKeyProp\r\n  isCitySelectorVisible: VisibleProp\r\n  cityData: CityDataProp\r\n  isLoadingCityData: VisibleProp\r\n  departDate: DepartDateProp\r\n  isDateSelectorVisible: VisibleProp\r\n  highSpeed: VisibleProp\r\n  dispatch: Dispatch\r\n}\r\n\r\nconst App: FC<AppProps> = props => {\r\n  const {\r\n    to,\r\n    from,\r\n    isCitySelectorVisible,\r\n    searchKey,\r\n    cityData,\r\n    isLoadingCityData,\r\n    departDate,\r\n    isDateSelectorVisible,\r\n    highSpeed,\r\n    dispatch\r\n  } = props\r\n\r\n  const onBack = useCallback(() => {\r\n    window.history.back()\r\n  }, [])\r\n\r\n  const journeyCbs = useMemo(() => {\r\n    return bindActionCreators({ exchangeFromTo, showCitySelector }, dispatch)\r\n  }, [dispatch])\r\n\r\n  const citySelectorCbs = useMemo(() => {\r\n    return bindActionCreators(\r\n      {\r\n        onBack: hideCitySelector,\r\n        fetchCityData,\r\n        onSelect: setSelectedCity,\r\n        setSearchKey\r\n      },\r\n      dispatch\r\n    )\r\n  }, [dispatch])\r\n\r\n  const highSpeedCbs = useMemo(() => {\r\n    return bindActionCreators(\r\n      {\r\n        toggle: setHighSpeed\r\n      },\r\n      dispatch\r\n    )\r\n  }, [dispatch])\r\n\r\n  const departDateCbs = useMemo(() => {\r\n    return bindActionCreators(\r\n      {\r\n        onClick: showDateSelector\r\n      },\r\n      dispatch\r\n    )\r\n  }, [dispatch])\r\n\r\n  const dateSelectorCbs = useMemo(() => {\r\n    return bindActionCreators(\r\n      {\r\n        onBack: hideDateSelector\r\n      },\r\n      dispatch\r\n    )\r\n  }, [dispatch])\r\n\r\n  const onSelectDate = useCallback(\r\n    day => {\r\n      if (!day || day < timeZero()) return\r\n      dispatch(setDepartDate(day))\r\n      dispatch(hideDateSelector())\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header-wrapper\">\r\n        <Header title=\"火车票\" onBack={onBack} />\r\n      </div>\r\n      <form action=\"query.html\" className=\"form\">\r\n        <Journey to={to} from={from} {...journeyCbs} />\r\n        <DepartDate time={departDate} {...departDateCbs} />\r\n        <HighSpeed highSpeed={highSpeed} {...highSpeedCbs} />\r\n        <Submit />\r\n      </form>\r\n      {isCitySelectorVisible && (\r\n        <CitySelector\r\n          show={isCitySelectorVisible}\r\n          searchKey={searchKey}\r\n          cityData={cityData}\r\n          loading={isLoadingCityData}\r\n          {...citySelectorCbs}\r\n        />\r\n      )}\r\n      {isDateSelectorVisible && (\r\n        <DateSelector\r\n          show={isDateSelectorVisible}\r\n          onSelect={onSelectDate}\r\n          {...dateSelectorCbs}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  function mapStateToProps({\r\n    to,\r\n    from,\r\n    searchKey,\r\n    isCitySelectorVisible,\r\n    cityData,\r\n    isLoadingCityData,\r\n    departDate,\r\n    isDateSelectorVisible,\r\n    highSpeed\r\n  }: StoreState) {\r\n    return {\r\n      to,\r\n      from,\r\n      searchKey,\r\n      isCitySelectorVisible,\r\n      cityData,\r\n      isLoadingCityData,\r\n      departDate,\r\n      isDateSelectorVisible,\r\n      highSpeed\r\n    }\r\n  },\r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      dispatch\r\n    }\r\n  }\r\n)(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport 'normalize.css'\r\n\r\nimport store from './store/store'\r\nimport './styles/index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","import React, { FC, memo } from 'react'\r\nimport './styles/Header.css'\r\n\r\ninterface HeaderProps {\r\n  onBack: () => void\r\n  title: string\r\n}\r\nconst Header: FC<HeaderProps> = memo(props => {\r\n  const { onBack, title } = props\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header-back\" onClick={onBack}>\r\n        <svg width=\"42\" height=\"42\">\r\n          <polyline\r\n            points=\"25,13 16,21 25,29\"\r\n            stroke=\"#fff\"\r\n            strokeWidth=\"2\"\r\n            fill=\"none\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <h1 className=\"header-title\">{title}</h1>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Header\r\n"],"sourceRoot":""}