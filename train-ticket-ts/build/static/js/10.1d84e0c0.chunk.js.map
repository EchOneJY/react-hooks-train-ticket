{"version":3,"sources":["../node_modules/left-pad/index.js","ticket/components/Schedule.tsx"],"names":["module","exports","str","len","ch","length","cache","pad","ScheduleRow","props","index","station","arriveTime","departTime","stay","isStartStation","isEndStation","isDepartStation","isArriveStation","beforeDepartStation","afterArriveStation","className","classNames","leftPad","grey","red","Schedule","memo","date","trainNumber","departStation","arriveStation","useState","scheduleList","setScheduleList","useEffect","url","URI","setSearch","dayjs","format","toString","fetch","then","res","json","data","departRow","arriveRow","i","Object","assign","console","log","map","schedule","key"],"mappings":"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","file":"static/js/10.1d84e0c0.chunk.js","sourcesContent":["/* This program is free software. It comes without any warranty, to\n     * the extent permitted by applicable law. You can redistribute it\n     * and/or modify it under the terms of the Do What The Fuck You Want\n     * To Public License, Version 2, as published by Sam Hocevar. See\n     * http://www.wtfpl.net/ for more details. */\n'use strict';\nmodule.exports = leftPad;\n\nvar cache = [\n  '',\n  ' ',\n  '  ',\n  '   ',\n  '    ',\n  '     ',\n  '      ',\n  '       ',\n  '        ',\n  '         '\n];\n\nfunction leftPad (str, len, ch) {\n  // convert `str` to a `string`\n  str = str + '';\n  // `len` is the `pad`'s length now\n  len = len - str.length;\n  // doesn't need to pad\n  if (len <= 0) return str;\n  // `ch` defaults to `' '`\n  if (!ch && ch !== 0) ch = ' ';\n  // convert `ch` to a `string` cuz it could be a number\n  ch = ch + '';\n  // cache common use cases\n  if (ch === ' ' && len < 10) return cache[len] + str;\n  // `pad` starts with an empty string\n  var pad = '';\n  // loop\n  while (true) {\n    // add `ch` to `pad` if `len` is odd\n    if (len & 1) pad += ch;\n    // divide `len` by 2, ditch the remainder\n    len >>= 1;\n    // \"double\" the `ch` so this operation count grows logarithmically on `len`\n    // each time `ch` is \"doubled\", the `len` would need to be \"doubled\" too\n    // similar to finding a value in binary search tree, hence O(log(n))\n    if (len) ch += ch;\n    // `len` is 0, exit the loop\n    else break;\n  }\n  // pad `str`!\n  return pad + str;\n}\n","import React, { FC, memo, useState, useEffect } from 'react'\r\n\r\nimport URI from 'urijs'\r\nimport dayjs from 'dayjs'\r\nimport classNames from 'classnames'\r\nimport leftPad from 'left-pad'\r\n\r\nimport { DateProp, TrainNumberProp, StationProp, TimeStrProp } from '../types'\r\n\r\nimport '../styles/Schedule.css'\r\n\r\ninterface SchduleItem {\r\n  beforeDepartStation: boolean\r\n  isDepartStation: boolean\r\n  afterArriveStation: boolean\r\n  isArriveStation: boolean\r\n  isStartStation: boolean\r\n  isEndStation: boolean\r\n  station: string\r\n  arriveTime: TimeStrProp\r\n  departTime: TimeStrProp\r\n  stay: DateProp\r\n}\r\n\r\ninterface ScheduleRowProps extends SchduleItem {\r\n  index: number\r\n}\r\n\r\nconst ScheduleRow: FC<ScheduleRowProps> = props => {\r\n  const {\r\n    index,\r\n    station,\r\n    arriveTime,\r\n    departTime,\r\n    stay,\r\n\r\n    isStartStation,\r\n    isEndStation,\r\n    isDepartStation,\r\n    isArriveStation,\r\n    beforeDepartStation,\r\n    afterArriveStation\r\n  } = props\r\n\r\n  return (\r\n    <li>\r\n      <div\r\n        className={classNames('icon', {\r\n          'icon-red': isDepartStation || isArriveStation\r\n        })}\r\n      >\r\n        {isDepartStation ? '出' : isArriveStation ? '到' : leftPad(index, 2, 0)}\r\n      </div>\r\n      <div\r\n        className={classNames('row', {\r\n          grey: beforeDepartStation || afterArriveStation\r\n        })}\r\n      >\r\n        <span\r\n          className={classNames('station', {\r\n            red: isArriveStation || isDepartStation\r\n          })}\r\n        >\r\n          {station}\r\n        </span>\r\n        <span className={classNames('arrtime', { red: isArriveStation })}>\r\n          {isStartStation ? '始发站' : arriveTime}\r\n        </span>\r\n        <span className={classNames('deptime', { red: isDepartStation })}>\r\n          {isEndStation ? '终到站' : departTime}\r\n        </span>\r\n        <span className=\"stoptime\">\r\n          {isStartStation || isEndStation ? '-' : stay + '分'}\r\n        </span>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\ninterface ScheduleProps {\r\n  date: DateProp\r\n  trainNumber: TrainNumberProp\r\n  departStation: StationProp\r\n  arriveStation: StationProp\r\n}\r\n\r\nconst Schedule: FC<ScheduleProps> = memo(props => {\r\n  const { date, trainNumber, departStation, arriveStation } = props\r\n\r\n  const [scheduleList, setScheduleList] = useState<SchduleItem[]>([])\r\n\r\n  useEffect(() => {\r\n    const url = new URI(\r\n      'http://easy-mock.liuup.com/mock/5efef790339f163501d502b7/api/schedule'\r\n    )\r\n      .setSearch('trainNumber', trainNumber + '')\r\n      .setSearch('departStation', departStation || '')\r\n      .setSearch('arriveStation', arriveStation || '')\r\n      .setSearch('date', dayjs(date).format('YYYY-MM-DD'))\r\n      .toString()\r\n\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        let departRow\r\n        let arriveRow\r\n\r\n        for (let i = 0; i < data.length; ++i) {\r\n          if (!departRow) {\r\n            if (data[i].station === departStation) {\r\n              departRow = Object.assign(data[i], {\r\n                beforeDepartStation: false,\r\n                isDepartStation: true,\r\n                afterArriveStation: false,\r\n                isArriveStation: false\r\n              })\r\n            } else {\r\n              Object.assign(data[i], {\r\n                beforeDepartStation: true,\r\n                isDepartStation: false,\r\n                afterArriveStation: false,\r\n                isArriveStation: false\r\n              })\r\n            }\r\n          } else if (!arriveRow) {\r\n            if (data[i].station === arriveStation) {\r\n              arriveRow = Object.assign(data[i], {\r\n                beforeDepartStation: false,\r\n                isDepartStation: false,\r\n                afterArriveStation: false,\r\n                isArriveStation: true\r\n              })\r\n            } else {\r\n              Object.assign(data[i], {\r\n                beforeDepartStation: false,\r\n                isDepartStation: false,\r\n                afterArriveStation: false,\r\n                isArriveStation: false\r\n              })\r\n            }\r\n          } else {\r\n            Object.assign(data[i], {\r\n              beforeDepartStation: false,\r\n              isDepartStation: false,\r\n              afterArriveStation: true,\r\n              isArriveStation: false\r\n            })\r\n          }\r\n\r\n          Object.assign(data[i], {\r\n            isStartStation: i === 0,\r\n            isEndStation: i === data.length - 1\r\n          })\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        setScheduleList(data)\r\n      })\r\n  }, [trainNumber, departStation, arriveStation, date])\r\n\r\n  return (\r\n    <div className=\"schedule\">\r\n      <div className=\"dialog\">\r\n        <h1>列车时刻</h1>\r\n        <div className=\"head\">\r\n          <span className=\"station\">车站</span>\r\n          <span className=\"deptime\">到达</span>\r\n          <span className=\"arrtime\">发车</span>\r\n          <span className=\"stoptime\">停留时间</span>\r\n        </div>\r\n        <ul>\r\n          {scheduleList.map((schedule, index) => {\r\n            return (\r\n              <ScheduleRow\r\n                key={schedule.station}\r\n                index={index + 1}\r\n                {...schedule}\r\n              />\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Schedule\r\n"],"sourceRoot":""}